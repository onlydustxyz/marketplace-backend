actions:
  - name: cancelPaymentRequest
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: DELETE
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/payments/{{$body.input.paymentId}}'
        version: 2
    permissions:
      - role: registered_user
  - name: createAndCloseIssue
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: '{{$body.input}}'
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/issues'
        version: 2
    permissions:
      - role: registered_user
    comment: createAndCloseIssue
  - name: fetchIssue
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/issues/{{$body.input.repoOwner}}/{{$body.input.repoName}}/{{$body.input.issueNumber}}'
        version: 2
    permissions:
      - role: registered_user
  - name: fetchPullRequest
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/pull_requests/{{$body.input.repoOwner}}/{{$body.input.repoName}}/{{$body.input.prNumber}}'
        version: 2
    permissions:
      - role: registered_user
  - name: ignoreContribution
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/projects/{{$body.input.projectId}}/contributions/{{$body.input.contributionId}}/ignore'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: ignoreContribution
  - name: requestPayment
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: '{{$body.input}}'
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/payments'
        version: 2
    permissions:
      - role: registered_user
  - name: searchUsers
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: GET
        query_params:
          order: '{{$body.input.order }}'
          page: '{{$body.input.page }}'
          per_page: '{{$body.input.perPage }}'
          query: '{{$body.input.query }}'
          sort: '{{$body.input.sort }}'
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/users/search'
        version: 2
    permissions:
      - role: registered_user
  - name: suggestTechnology
    definition:
      kind: synchronous
      handler: '{{HASURA_SUGGESTION_WEBHOOK}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "suggestion": {{$body.input.suggestion}}
            }
        template_engine: Kriti
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user_specific
    comment: Suggest a new technology
  - name: unignoreContribution
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: DELETE
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/projects/{{$body.input.projectId}}/contributions/{{$body.input.contributionId}}/ignore'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: unignoreContribution
  - name: updatePayoutInfo
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: '{{$body.input}}'
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/users/profile/payout_info'
        version: 2
    permissions:
      - role: registered_user
  - name: updateUserProfile
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: '{{$body.input}}'
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/users/profile'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: updateUserProfile
custom_types:
  enums:
    - name: Visibility
      values:
        - description: null
          is_deprecated: null
          value: PRIVATE
        - description: null
          is_deprecated: null
          value: PUBLIC
    - name: Channel
      values:
        - description: null
          is_deprecated: null
          value: DISCORD
        - description: null
          is_deprecated: null
          value: EMAIL
        - description: null
          is_deprecated: null
          value: LINKED_IN
        - description: null
          is_deprecated: null
          value: TELEGRAM
        - description: null
          is_deprecated: null
          value: TWITTER
        - description: null
          is_deprecated: null
          value: WHATSAPP
    - name: AllocatedTime
      values:
        - description: null
          is_deprecated: null
          value: LESS_THAN_ONE_DAY
        - description: null
          is_deprecated: null
          value: MORE_THAN_THREE_DAYS
        - description: null
          is_deprecated: null
          value: NONE
        - description: null
          is_deprecated: null
          value: ONE_TO_THREE_DAYS
    - name: ProfileCover
      values:
        - description: null
          is_deprecated: null
          value: BLUE
        - description: null
          is_deprecated: null
          value: CYAN
        - description: null
          is_deprecated: null
          value: MAGENTA
        - description: null
          is_deprecated: null
          value: YELLOW
    - name: GithubIssueCreatedAndClosedStatus
      values:
        - description: null
          is_deprecated: null
          value: Open
        - description: null
          is_deprecated: null
          value: Completed
        - description: null
          is_deprecated: null
          value: Cancelled
    - name: GithubPullRequestStatus
      values:
        - description: null
          is_deprecated: null
          value: CLOSED
        - description: null
          is_deprecated: null
          value: MERGED
        - description: null
          is_deprecated: null
          value: OPEN
    - name: GithubIssueStatus
      values:
        - description: null
          is_deprecated: null
          value: CANCELLED
        - description: null
          is_deprecated: null
          value: COMPLETED
        - description: null
          is_deprecated: null
          value: OPEN
    - name: WorkItemType
      values:
        - description: null
          is_deprecated: null
          value: ISSUE
        - description: null
          is_deprecated: null
          value: PULL_REQUEST
        - description: null
          is_deprecated: null
          value: CODE_REVIEW
    - name: IdentityType
      values:
        - description: null
          is_deprecated: null
          value: COMPANY
        - description: null
          is_deprecated: null
          value: PERSON
    - name: PayoutSettingsType
      values:
        - description: null
          is_deprecated: null
          value: BANK_ADDRESS
        - description: null
          is_deprecated: null
          value: ETHEREUM_ADDRESS
        - description: null
          is_deprecated: null
          value: ETHEREUM_NAME
    - name: PreferredMethod
      values:
        - description: null
          is_deprecated: null
          value: FIAT
        - description: null
          is_deprecated: null
          value: CRYPTO
  input_objects:
    - name: Language
    - name: Information
    - name: WorkItem
    - name: Reason
    - name: BankAddress
    - name: CompanyIdentity
    - name: Location
    - name: PersonIdentity
    - name: Identity
    - name: PayoutSettings
    - name: BankAccount
  objects:
    - name: GithubIssueCreatedAndClosed
    - name: GithubUserLinkedToIssue
    - name: GithubUser
      relationships:
        - field_mapping:
            id: github_user_id
          name: user
          remote_table:
            name: registered_users
            schema: public
          source: default
          type: object
    - name: GithubPullRequest
    - name: GithubIssue
    - name: Payment
    - name: Command
    - name: PaymentRequestResponse
  scalars:
    - name: Url
    - name: Uuid
    - name: DateTime
    - name: DateTimeUtc
    - name: Amount
    - name: EthereumAddress
    - name: EthereumName
    - name: Iban
